(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"/XDB":function(s,a,n){"use strict";n.r(a),n.d(a,"DemoModule",function(){return c});var p=n("ofXK"),l=n("tyNb"),t=n("jCJ1"),e=n("FID4"),o=n("fXoL"),r=[{path:"",component:function(){function s(){this.captchaResponse=""}return s.prototype.resolved=function(s){var a=s?s.substr(0,7)+"..."+s.substr(-7):s;this.captchaResponse+=JSON.stringify(a)+"\n"},s.prototype.onError=function(s){this.captchaResponse+="ERROR; error details (if any) have been logged to console\n",console.log("reCAPTCHA error encountered; details:",s)},s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=o.Eb({type:s,selectors:[["recaptcha-demo"]],decls:8,vars:1,consts:[["errorMode","handled","siteKey","6Ldp0xgUAAAAAF_iIss_hpFaVrjLbPGjwyfJwebB","size","invisible",3,"resolved","error"],["captchaRef","reCaptcha"],[3,"click"]],template:function(s,a){if(1&s){var n=o.Qb();o.Pb(0,"re-captcha",0,1),o.Wb("resolved",function(s){return a.resolved(s)})("error",function(s){return a.onError(s)}),o.Ob(),o.Pb(2,"button",2),o.Wb("click",function(){return o.hc(n),o.gc(1).execute()}),o.rc(3,"Submit"),o.Ob(),o.Pb(4,"button",2),o.Wb("click",function(){return o.hc(n),o.gc(1).reset()}),o.rc(5,"Reset"),o.Ob(),o.Pb(6,"pre"),o.rc(7),o.Ob()}2&s&&(o.zb(7),o.tc("reCAPTCHA response log:\n",a.captchaResponse||"(empty)",""))},directives:[t.e],encapsulation:2}),s}(),data:{page:{feature:"invisible",title:"Invisible reCAPTCHA API Example",content:{component:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaErrorParameters } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./invisible-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">InvisibleDemoComponent</span> </span>{\n  <span class="hljs-keyword">public</span> captchaResponse = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-keyword">public</span> resolved(captchaResponse: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">const</span> newResponse = captchaResponse\n      ? <span class="hljs-string">`<span class="hljs-subst">${captchaResponse.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${captchaResponse.substr(-<span class="hljs-number">7</span>)}</span>`</span>\n      : captchaResponse;\n    <span class="hljs-built_in">this</span>.captchaResponse += <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(newResponse)}</span>\\n`</span>;\n  }\n\n  <span class="hljs-keyword">public</span> onError(errorDetails: RecaptchaErrorParameters): <span class="hljs-built_in">void</span> {\n    <span class="hljs-built_in">this</span>.captchaResponse += <span class="hljs-string">`ERROR; error details (if any) have been logged to console\\n`</span>;\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`reCAPTCHA error encountered; details:`</span>, errorDetails);\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n  #<span class="hljs-attr">captchaRef</span>=<span class="hljs-string">&quot;reCaptcha&quot;</span>\n  (<span class="hljs-attr">resolved</span>)=<span class="hljs-string">&quot;resolved($event)&quot;</span>\n  (<span class="hljs-attr">error</span>)=<span class="hljs-string">&quot;onError($event)&quot;</span>\n  <span class="hljs-attr">errorMode</span>=<span class="hljs-string">&quot;handled&quot;</span>\n  <span class="hljs-attr">siteKey</span>=<span class="hljs-string">&quot;6Ldp0xgUAAAAAF_iIss_hpFaVrjLbPGjwyfJwebB&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;invisible&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.execute()&quot;</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.reset()&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>\nreCAPTCHA response log:\n{{ captchaResponse || &quot;(empty)&quot; }}&lt;/pre\n&gt;\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: InvisibleDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [InvisibleDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: InvisibleDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [InvisibleDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: InvisibleDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [InvisibleDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n'}}}}}],c=function(){function s(){}return s.\u0275mod=o.Ib({type:s}),s.\u0275inj=o.Hb({factory:function(a){return new(a||s)},providers:[{provide:t.a,useValue:Object(e.a)()},{provide:t.c,useValue:"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM"}],imports:[[l.d.forChild(r),t.h,p.b]]}),s}()}}]);