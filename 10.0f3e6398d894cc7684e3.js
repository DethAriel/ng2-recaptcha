(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"+wTf":function(s,n,a){"use strict";a.r(n),a.d(n,"DemoModule",function(){return x});var t=a("ofXK"),l=a("tyNb"),p=a("jCJ1"),e=a("FID4"),c=a("fXoL");function r(s,n){1&s&&(c.Pb(0,"h3"),c.rc(1,"Most recent token"),c.Ob())}function o(s,n){if(1&s&&(c.Pb(0,"pre"),c.rc(1),c.Ob()),2&s){var a=c.Yb();c.zb(1),c.sc(a.formatToken(a.recentToken))}}function i(s,n){1&s&&(c.Pb(0,"h3",3),c.rc(1,"Most recent error"),c.Ob())}function h(s,n){if(1&s&&(c.Pb(0,"pre",3),c.rc(1),c.Ob()),2&s){var a=c.Yb();c.zb(1),c.sc(a.recentError.error||"Most recent execution resulted in error")}}function u(s,n){1&s&&(c.Pb(0,"pre"),c.rc(1,"(empty)"),c.Ob())}function j(s,n){if(1&s&&(c.rc(0," Token: "),c.Pb(1,"code"),c.rc(2),c.Ob()),2&s){var a=c.Yb().$implicit,t=c.Yb(2);c.zb(2),c.sc(t.formatToken(a.token))}}function g(s,n){if(1&s&&(c.Pb(0,"span",3),c.rc(1,"Error"),c.Ob(),c.rc(2,": "),c.Pb(3,"code"),c.rc(4),c.Ob()),2&s){var a=c.Yb().$implicit;c.zb(4),c.sc(a.error||"This execution resulted in error")}}function m(s,n){if(1&s&&(c.Pb(0,"li"),c.rc(1," Action: "),c.Pb(2,"code"),c.rc(3),c.Ob(),c.rc(4,". "),c.qc(5,j,3,1,"ng-template",5),c.qc(6,g,5,1,"ng-template",5),c.Ob()),2&s){var a=n.$implicit;c.zb(3),c.sc(a.action),c.zb(2),c.bc("ngIf",a.token),c.zb(1),c.bc("ngIf",!a.token)}}function b(s,n){if(1&s&&(c.Pb(0,"ol"),c.qc(1,m,7,3,"li",4),c.Ob()),2&s){var a=c.Yb();c.zb(1),c.bc("ngForOf",a.executionLog)}}var d=[{path:"",component:function(){function s(s){this.recaptchaV3Service=s,this.recentToken="",this.executionLog=[]}return s.prototype.executeAction=function(s){var n=this;this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe(),this.singleExecutionSubscription=this.recaptchaV3Service.execute(s).subscribe(function(s){n.recentToken=s,n.recentError=void 0},function(s){n.recentToken="",n.recentError={error:s}})},s.prototype.ngOnInit=function(){var s=this;this.allExecutionsSubscription=this.recaptchaV3Service.onExecute.subscribe(function(n){return s.executionLog.push(n)}),this.allExecutionErrorsSubscription=this.recaptchaV3Service.onExecuteError.subscribe(function(n){return s.executionLog.push(n)})},s.prototype.ngOnDestroy=function(){this.allExecutionsSubscription&&this.allExecutionsSubscription.unsubscribe(),this.allExecutionErrorsSubscription&&this.allExecutionErrorsSubscription.unsubscribe(),this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe()},s.prototype.formatToken=function(s){return s?s.substr(0,7)+"..."+s.substr(-7):"(empty)"},s.\u0275fac=function(n){return new(n||s)(c.Kb(p.d))},s.\u0275cmp=c.Eb({type:s,selectors:[["recaptcha-demo"]],decls:12,vars:6,consts:[[3,"click"],[4,"ngIf"],["class","error",4,"ngIf"],[1,"error"],[4,"ngFor","ngForOf"],[3,"ngIf"]],template:function(s,n){1&s&&(c.Pb(0,"button",0),c.Wb("click",function(){return n.executeAction("homepage")}),c.rc(1,'Execute "homepage" action'),c.Ob(),c.Pb(2,"button",0),c.Wb("click",function(){return n.executeAction("shoppingCart")}),c.rc(3,' Execute "shoppingCart" action\n'),c.Ob(),c.qc(4,r,2,0,"h3",1),c.qc(5,o,2,1,"pre",1),c.qc(6,i,2,0,"h3",2),c.qc(7,h,2,1,"pre",2),c.Pb(8,"h3"),c.rc(9,"reCAPTCHA execution log"),c.Ob(),c.qc(10,u,2,0,"pre",1),c.qc(11,b,2,1,"ol",1)),2&s&&(c.zb(4),c.bc("ngIf",n.recentToken),c.zb(1),c.bc("ngIf",n.recentToken),c.zb(1),c.bc("ngIf",n.recentError),c.zb(1),c.bc("ngIf",n.recentError),c.zb(3),c.bc("ngIf",0===n.executionLog.length),c.zb(1),c.bc("ngIf",n.executionLog.length>0))},directives:[t.j,t.i],styles:[".error[_ngcontent-%COMP%] {\n        color: crimson;\n      }"]}),s}(),data:{page:{feature:"v3",title:"reCAPTCHA v3 Example",content:{component:'<span class="hljs-keyword">import</span> { Component, OnDestroy, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> {\n  OnExecuteData,\n  OnExecuteErrorData,\n  ReCaptchaV3Service,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n<span class="hljs-keyword">import</span> { Subscription } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;rxjs&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./v3-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RecaptchaV3DemoComponent</span> <span class="hljs-title">implements</span> <span class="hljs-title">OnInit</span>, <span class="hljs-title">OnDestroy</span> </span>{\n  <span class="hljs-keyword">public</span> recentToken = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span>\n  <span class="hljs-keyword">public</span> recentError?: { <span class="hljs-attr">error</span>: <span class="hljs-built_in">any</span> };\n  <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> executionLog: <span class="hljs-built_in">Array</span>&lt;OnExecuteData | OnExecuteErrorData&gt; = [];\n\n  <span class="hljs-keyword">private</span> allExecutionsSubscription: Subscription;\n  <span class="hljs-keyword">private</span> allExecutionErrorsSubscription: Subscription;\n  <span class="hljs-keyword">private</span> singleExecutionSubscription: Subscription;\n\n  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> recaptchaV3Service: ReCaptchaV3Service</span>)</span> {}\n\n  <span class="hljs-keyword">public</span> executeAction(action: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.singleExecutionSubscription) {\n      <span class="hljs-built_in">this</span>.singleExecutionSubscription.unsubscribe();\n    }\n    <span class="hljs-built_in">this</span>.singleExecutionSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service\n      .execute(action)\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">token</span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.recentToken = token;\n          <span class="hljs-built_in">this</span>.recentError = <span class="hljs-literal">undefined</span>;\n        },\n        <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.recentToken = <span class="hljs-string">&quot;&quot;</span>;\n          <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>\n          <span class="hljs-built_in">this</span>.recentError = { error };\n        }\n      );\n  }\n\n  <span class="hljs-keyword">public</span> ngOnInit(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-built_in">this</span>.allExecutionsSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service.onExecute.subscribe(\n      <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-built_in">this</span>.executionLog.push(data)\n    );\n    <span class="hljs-built_in">this</span>.allExecutionErrorsSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service.onExecuteError.subscribe(\n      <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-built_in">this</span>.executionLog.push(data)\n    );\n  }\n\n  <span class="hljs-keyword">public</span> ngOnDestroy(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.allExecutionsSubscription) {\n      <span class="hljs-built_in">this</span>.allExecutionsSubscription.unsubscribe();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.allExecutionErrorsSubscription) {\n      <span class="hljs-built_in">this</span>.allExecutionErrorsSubscription.unsubscribe();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.singleExecutionSubscription) {\n      <span class="hljs-built_in">this</span>.singleExecutionSubscription.unsubscribe();\n    }\n  }\n\n  <span class="hljs-keyword">public</span> formatToken(token: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">if</span> (!token) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;(empty)&quot;</span>;\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${token.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${token.substr(-<span class="hljs-number">7</span>)}</span>`</span>;\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>\n  Execute &quot;shoppingCart&quot; action\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Most recent error<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>{{\n  recentError.error || &quot;Most recent execution resulted in error&quot;\n}}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>reCAPTCHA execution log<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">ol</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let entry of executionLog&quot;</span>&gt;</span>\n    Action: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.action }}&lt;/code\n    &gt;.\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;entry.token&quot;</span>&gt;</span>\n      Token: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;!entry.token&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Error<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>:\n      <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: RecaptchaV3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [RecaptchaV3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_V3_SITE_KEY, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: RecaptchaV3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [RecaptchaV3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_V3_SITE_KEY, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: RecaptchaV3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [RecaptchaV3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_V3_SITE_KEY, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n'}}}}}],x=function(){function s(){}return s.\u0275mod=c.Ib({type:s}),s.\u0275inj=c.Hb({factory:function(n){return new(n||s)},providers:[{provide:p.c,useValue:"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM"},{provide:p.a,useValue:Object(e.a)()}],imports:[[l.d.forChild(d),p.i,t.b]]}),s}()}}]);