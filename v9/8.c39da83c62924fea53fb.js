(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{Sx3X:function(s,n,a){"use strict";a.r(n),a.d(n,"DemoModule",(function(){return i}));var o=a("Valr"),l=a("DUip"),e=a("+a4R"),p=a("FID4"),t=a("TYT/"),r={siteKey:"6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU"},c=[{path:"",component:function(){function s(){}return s.prototype.resolved=function(s){console.log("Resolved captcha with response: "+s)},s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=t.Hb({type:s,selectors:[["recaptcha-demo"]],decls:1,vars:0,consts:[[3,"resolved"]],template:function(s,n){1&s&&(t.Sb(0,"re-captcha",0),t.ac("resolved",(function(s){return n.resolved(s)})),t.Rb())},directives:[e.e],encapsulation:2}),s}(),data:{page:{feature:"global-config",title:"Global Config Example",content:{component:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;recaptcha-demo&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./global-config-demo.component.html&#x27;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> GlobalConfigDemoComponent {\n  <span class="hljs-keyword">public</span> resolved(captchaResponse: <span class="hljs-built_in">string</span>) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Resolved captcha with response: <span class="hljs-subst">${captchaResponse}</span>`</span>);\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span> (<span class="hljs-attr">resolved</span>)=<span class="hljs-string">&quot;resolved($event)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n',module:{"":'\n\n<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> {\n  RECAPTCHA_SETTINGS,\n  RecaptchaModule,\n  RecaptchaSettings,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { GlobalConfigDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> globalSettings: RecaptchaSettings = { siteKey: <span class="hljs-string">&#x27;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&#x27;</span> };\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: GlobalConfigDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [GlobalConfigDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  providers: [\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: globalSettings,\n    },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',fr:'\n\n<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> {\n  RECAPTCHA_SETTINGS,\n  RecaptchaModule,\n  RecaptchaSettings,\n  RECAPTCHA_LANGUAGE,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { GlobalConfigDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> globalSettings: RecaptchaSettings = { siteKey: <span class="hljs-string">&#x27;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&#x27;</span> };\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: GlobalConfigDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [GlobalConfigDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  providers: [\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: globalSettings,\n    },\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',de:'\n\n<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> {\n  RECAPTCHA_SETTINGS,\n  RecaptchaModule,\n  RecaptchaSettings,\n  RECAPTCHA_LANGUAGE,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { GlobalConfigDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./global-config-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> globalSettings: RecaptchaSettings = { siteKey: <span class="hljs-string">&#x27;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&#x27;</span> };\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: GlobalConfigDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [GlobalConfigDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  providers: [\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: globalSettings,\n    },\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n'}}}}}],i=function(){function s(){}return s.\u0275mod=t.Lb({type:s}),s.\u0275inj=t.Kb({factory:function(n){return new(n||s)},providers:[{provide:e.b,useValue:r},{provide:e.a,useValue:Object(p.a)()},{provide:e.c,useValue:"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM"}],imports:[[l.d.forChild(c),e.h,o.b]]}),s}()}}]);