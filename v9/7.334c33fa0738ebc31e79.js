(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{UMLa:function(s,a,n){"use strict";n.r(a),n.d(a,"DemoModule",(function(){return h}));var l=n("Valr"),o=n("QJY3"),p=n("DUip"),t=n("+a4R"),e=n("FID4"),r=n("TYT/"),c=[{path:"",component:function(){function s(){this.formModel={}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=r.Hb({type:s,selectors:[["recaptcha-demo"]],decls:14,vars:5,consts:[["captchaProtectedForm","ngForm"],["name","captcha","required","","siteKey","6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU",3,"ngModel","ngModelChange"],["captchaControl","ngModel"],[1,"error",3,"hidden"],[1,"success",3,"hidden"],[3,"click"]],template:function(s,a){if(1&s&&(r.Sb(0,"form",null,0),r.Sb(2,"re-captcha",1,2),r.ac("ngModelChange",(function(s){return a.formModel.captcha=s})),r.Rb(),r.Sb(4,"div",3),r.tc(5,"Captcha must be solved"),r.Rb(),r.Sb(6,"div",4),r.tc(7,"Captcha is valid"),r.Rb(),r.Sb(8,"div",3),r.tc(9,"The form must be filled out"),r.Rb(),r.Sb(10,"div",4),r.tc(11,"The form is valid"),r.Rb(),r.Sb(12,"button",5),r.ac("click",(function(){return a.formModel.captcha=""})),r.tc(13,"Reset Captcha"),r.Rb(),r.Rb()),2&s){var n=r.kc(1),l=r.kc(3);r.Bb(2),r.fc("ngModel",a.formModel.captcha),r.Bb(2),r.fc("hidden",l.valid||l.pristine),r.Bb(2),r.fc("hidden",!l.valid),r.Bb(2),r.fc("hidden",n.form.valid),r.Bb(2),r.fc("hidden",!n.form.valid)}},directives:[o.j,o.f,o.g,t.e,t.j,o.i,o.e,o.h],styles:[".error[_ngcontent-%COMP%] { color: crimson; }\n      .success[_ngcontent-%COMP%] { color: green; }"]}),s}(),data:{page:{feature:"forms",title:"Forms Example",content:{component:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> FormModel {\n  captcha?: <span class="hljs-built_in">string</span>;\n}\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;recaptcha-demo&#x27;</span>,\n  styles: [<span class="hljs-string">`\n      .error { color: crimson; }\n      .success { color: green; }\n  `</span> ],\n  templateUrl: <span class="hljs-string">&#x27;./forms-demo.component.html&#x27;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> FormsDemoComponent {\n  <span class="hljs-keyword">public</span> formModel: FormModel = {};\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">form</span> #<span class="hljs-attr">captchaProtectedForm</span>=<span class="hljs-string">&quot;ngForm&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;formModel.captcha&quot;</span>\n    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;captcha&quot;</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">siteKey</span>=<span class="hljs-string">&quot;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&quot;</span>\n    #<span class="hljs-attr">captchaControl</span>=<span class="hljs-string">&quot;ngModel&quot;</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaControl.valid || captchaControl.pristine&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Captcha must be solved<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaControl.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Captcha is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>The form must be filled out<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>The form is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;formModel.captcha = &#x27;&#x27;&quot;</span>&gt;</span>Reset Captcha<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: FormsDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [FormsDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: FormsDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [FormsDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: FormsDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [FormsDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n'}}}}}],h=function(){function s(){}return s.\u0275mod=r.Lb({type:s}),s.\u0275inj=r.Kb({factory:function(a){return new(a||s)},providers:[{provide:t.c,useValue:"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM"},{provide:t.a,useValue:Object(e.a)()}],imports:[[p.d.forChild(c),t.h,t.f,o.b,l.b]]}),s}()}}]);