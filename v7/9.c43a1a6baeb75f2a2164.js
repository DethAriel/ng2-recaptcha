(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{TYAI:function(s,n,a){"use strict";a.r(n);var l=a("CcnG"),e=a("FID4"),p=function(){function s(){this.captchaResponse=""}return s.prototype.resolved=function(s){var n=s?s.substr(0,7)+"..."+s.substr(-7):s;this.captchaResponse+=JSON.stringify(n)+"\n"},s.prototype.onError=function(s){this.captchaResponse+="ERROR; error details (if any) have been logged to console\n",console.log("reCAPTCHA error encountered; details:",s)},s}(),o={page:{feature:"invisible",title:"Invisible reCAPTCHA API Example",content:{component:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;recaptcha-demo&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./invisible-demo.component.html&#x27;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> InvisibleDemoComponent {\n  <span class="hljs-keyword">public</span> captchaResponse: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;\n  <span class="hljs-keyword">public</span> resolved(captchaResponse: <span class="hljs-built_in">string</span>) {\n    <span class="hljs-keyword">const</span> newResponse = captchaResponse\n      ? <span class="hljs-string">`<span class="hljs-subst">${captchaResponse.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${captchaResponse.substr(<span class="hljs-number">-7</span>)}</span>`</span>\n      : captchaResponse;\n    <span class="hljs-built_in">this</span>.captchaResponse += <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(newResponse)}</span>\\n`</span>;\n  }\n\n  <span class="hljs-keyword">public</span> onError(errorDetails: <span class="hljs-built_in">any</span>[]) {\n    <span class="hljs-built_in">this</span>.captchaResponse += <span class="hljs-string">`ERROR; error details (if any) have been logged to console\\n`</span>;\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`reCAPTCHA error encountered; details:`</span>, errorDetails);\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n  #<span class="hljs-attr">captchaRef</span>=<span class="hljs-string">&quot;reCaptcha&quot;</span>\n  (<span class="hljs-attr">resolved</span>)=<span class="hljs-string">&quot;resolved($event)&quot;</span>\n  (<span class="hljs-attr">error</span>)=<span class="hljs-string">&quot;onError($event)&quot;</span>\n  <span class="hljs-attr">errorMode</span>=<span class="hljs-string">&quot;handled&quot;</span>\n  <span class="hljs-attr">siteKey</span>=<span class="hljs-string">&quot;6Ldp0xgUAAAAAF_iIss_hpFaVrjLbPGjwyfJwebB&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;invisible&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.execute()&quot;</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.reset()&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>reCAPTCHA response log:\n{{ captchaResponse || &#x27;(empty)&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: InvisibleDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [InvisibleDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: InvisibleDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [InvisibleDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { InvisibleDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: InvisibleDemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [InvisibleDemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n'}}}},t=Object(e.a)(),r=function(){},c=a("pMnS"),i=a("WZG6"),h=a("z0F3"),u=l.Db({encapsulation:2,styles:[],data:{}});function d(s){return l.Vb(0,[(s()(),l.Fb(0,0,null,null,1,"re-captcha",[["errorMode","handled"],["siteKey","6Ldp0xgUAAAAAF_iIss_hpFaVrjLbPGjwyfJwebB"],["size","invisible"]],[[1,"id",0]],[[null,"resolved"],[null,"error"]],(function(s,n,a){var l=!0,e=s.component;"resolved"===n&&(l=!1!==e.resolved(a)&&l);"error"===n&&(l=!1!==e.onError(a)&&l);return l}),i.b,i.a)),l.Eb(1,4374528,[["captchaRef",4]],0,h.g,[l.q,h.i,l.J,[2,h.d]],{siteKey:[0,"siteKey"],size:[1,"size"],errorMode:[2,"errorMode"]},{resolved:"resolved",error:"error"}),(s()(),l.Fb(2,0,null,null,1,"button",[],null,[[null,"click"]],(function(s,n,a){var e=!0;"click"===n&&(e=!1!==l.Ob(s,1).execute()&&e);return e}),null,null)),(s()(),l.Ub(-1,null,["Submit"])),(s()(),l.Fb(4,0,null,null,1,"button",[],null,[[null,"click"]],(function(s,n,a){var e=!0;"click"===n&&(e=!1!==l.Ob(s,1).reset()&&e);return e}),null,null)),(s()(),l.Ub(-1,null,["Reset"])),(s()(),l.Fb(6,0,null,null,1,"pre",[],null,null,null,null,null)),(s()(),l.Ub(7,null,["reCAPTCHA response log:\n",""]))],(function(s,n){s(n,1,0,"6Ldp0xgUAAAAAF_iIss_hpFaVrjLbPGjwyfJwebB","invisible","handled")}),(function(s,n){var a=n.component;s(n,0,0,l.Ob(n,1).id),s(n,7,0,a.captchaResponse||"(empty)")}))}var j=l.Bb("recaptcha-demo",p,(function(s){return l.Vb(0,[(s()(),l.Fb(0,0,null,null,1,"recaptcha-demo",[],null,null,null,d,u)),l.Eb(1,49152,null,0,p,[],null,null)],null,null)}),{},{},[]),m=a("Ip0R"),g=a("ZYCi");a.d(n,"DemoModuleNgFactory",(function(){return b}));var b=l.Cb(r,[],(function(s){return l.Lb([l.Mb(512,l.m,l.rb,[[8,[c.a,j]],[3,l.m],l.H]),l.Mb(4608,h.i,h.i,[l.M,[2,h.b],[2,h.a],[2,h.c],[2,h.e]]),l.Mb(4608,m.l,m.k,[l.D,[2,m.s]]),l.Mb(1073742336,g.n,g.n,[[2,g.t],[2,g.l]]),l.Mb(1073742336,h.m,h.m,[]),l.Mb(1073742336,h.j,h.j,[]),l.Mb(1073742336,m.b,m.b,[]),l.Mb(1073742336,r,r,[]),l.Mb(256,h.b,t,[]),l.Mb(256,h.e,"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM",[]),l.Mb(1024,g.i,(function(){return[[{path:"",component:p,data:o}]]}),[])])}))}}]);