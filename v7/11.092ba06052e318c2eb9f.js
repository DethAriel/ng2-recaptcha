(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{opoP:function(s,n,l){"use strict";l.r(n);var a=l("CcnG"),t=l("FID4"),p=function(){function s(s){this.recaptchaV3Service=s,this.recentToken="",this.executionLog=[]}return s.prototype.executeAction=function(s){var n=this;this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe(),this.singleExecutionSubscription=this.recaptchaV3Service.execute(s).subscribe((function(s){n.recentToken=s,n.recentError=void 0}),(function(s){n.recentToken="",n.recentError={error:s}}))},s.prototype.ngOnInit=function(){var s=this;this.allExecutionsSubscription=this.recaptchaV3Service.onExecute.subscribe((function(n){return s.executionLog.push(n)})),this.allExecutionErrorsSubscription=this.recaptchaV3Service.onExecuteError.subscribe((function(n){return s.executionLog.push(n)}))},s.prototype.ngOnDestroy=function(){this.allExecutionsSubscription&&this.allExecutionsSubscription.unsubscribe(),this.allExecutionErrorsSubscription&&this.allExecutionErrorsSubscription.unsubscribe(),this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe()},s.prototype.formatToken=function(s){return s?s.substr(0,7)+"..."+s.substr(-7):"(empty)"},s}(),e={page:{feature:"v3",title:"reCAPTCHA v3 Example",content:{component:'<span class="hljs-keyword">import</span> { Component, OnDestroy, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { OnExecuteData, OnExecuteErrorData, ReCaptchaV3Service } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n<span class="hljs-keyword">import</span> { Subscription } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rxjs&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;recaptcha-demo&#x27;</span>,\n  styles: [<span class="hljs-string">`\n    .error { color: crimson; }\n`</span> ],\n  templateUrl: <span class="hljs-string">&#x27;./v3-demo.component.html&#x27;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> RecaptchaV3DemoComponent <span class="hljs-keyword">implements</span> OnInit, OnDestroy {\n  <span class="hljs-keyword">public</span> recentToken: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;\n  <span class="hljs-keyword">public</span> recentError?: { error: <span class="hljs-built_in">any</span> };\n  <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> executionLog: <span class="hljs-built_in">Array</span>&lt;OnExecuteData | OnExecuteErrorData&gt; = [];\n\n  <span class="hljs-keyword">private</span> allExecutionsSubscription: Subscription;\n  <span class="hljs-keyword">private</span> allExecutionErrorsSubscription: Subscription;\n  <span class="hljs-keyword">private</span> singleExecutionSubscription: Subscription;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">private</span> recaptchaV3Service: ReCaptchaV3Service,\n  </span>) {\n  }\n\n  <span class="hljs-keyword">public</span> executeAction(action: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.singleExecutionSubscription) {\n      <span class="hljs-built_in">this</span>.singleExecutionSubscription.unsubscribe();\n    }\n    <span class="hljs-built_in">this</span>.singleExecutionSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service.execute(action)\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">token</span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.recentToken = token;\n          <span class="hljs-built_in">this</span>.recentError = <span class="hljs-literal">undefined</span>;\n        },\n        <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.recentToken = <span class="hljs-string">&#x27;&#x27;</span>;\n          <span class="hljs-built_in">this</span>.recentError = { error };\n        },\n      );\n  }\n\n  <span class="hljs-keyword">public</span> ngOnInit() {\n    <span class="hljs-built_in">this</span>.allExecutionsSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service.onExecute\n      .subscribe(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-built_in">this</span>.executionLog.push(data));\n    <span class="hljs-built_in">this</span>.allExecutionErrorsSubscription = <span class="hljs-built_in">this</span>.recaptchaV3Service.onExecuteError\n      .subscribe(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-built_in">this</span>.executionLog.push(data));\n  }\n\n  <span class="hljs-keyword">public</span> ngOnDestroy() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.allExecutionsSubscription) {\n      <span class="hljs-built_in">this</span>.allExecutionsSubscription.unsubscribe();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.allExecutionErrorsSubscription) {\n      <span class="hljs-built_in">this</span>.allExecutionErrorsSubscription.unsubscribe();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.singleExecutionSubscription) {\n      <span class="hljs-built_in">this</span>.singleExecutionSubscription.unsubscribe();\n    }\n  }\n\n  <span class="hljs-keyword">public</span> formatToken(token: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">if</span> (!token) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;(empty)&#x27;</span>;\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${token.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${token.substr(<span class="hljs-number">-7</span>)}</span>`</span>;\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>Execute &quot;shoppingCart&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Most recent error<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>{{ recentError.error || &quot;Most recent execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>reCAPTCHA execution log<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">ol</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let entry of executionLog&quot;</span>&gt;</span>\n    Action: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.action }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>.\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;entry.token&quot;</span>&gt;</span>\n      Token: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;!entry.token&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Error<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: RecaptchaV3DemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [RecaptchaV3DemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_V3_SITE_KEY, useValue: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: RecaptchaV3DemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [RecaptchaV3DemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_V3_SITE_KEY, useValue: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaV3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    path: <span class="hljs-string">&#x27;&#x27;</span>,\n    component: RecaptchaV3DemoComponent,\n    data: { page: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  declarations: [RecaptchaV3DemoComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    RecaptchaV3Module,\n    CommonModule,\n  ],\n  providers: [\n    { provide: RECAPTCHA_V3_SITE_KEY, useValue: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { provide: RECAPTCHA_LANGUAGE, useValue: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule { }\n'}}}},o=Object(t.a)(),c=function(){},r=l("pMnS"),u=l("Ip0R"),i=l("z0F3"),h=a.Db({encapsulation:0,styles:[".error[_ngcontent-%COMP%] { color: crimson; }"],data:{}});function j(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"h3",[],null,null,null,null,null)),(s()(),a.Ub(-1,null,["Most recent token"]))],null,null)}function g(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"pre",[],null,null,null,null,null)),(s()(),a.Ub(1,null,["",""]))],null,(function(s,n){var l=n.component;s(n,1,0,l.formatToken(l.recentToken))}))}function b(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"h3",[["class","error"]],null,null,null,null,null)),(s()(),a.Ub(-1,null,["Most recent error"]))],null,null)}function m(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"pre",[["class","error"]],null,null,null,null,null)),(s()(),a.Ub(1,null,["",""]))],null,(function(s,n){s(n,1,0,n.component.recentError.error||"Most recent execution resulted in error")}))}function d(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"pre",[],null,null,null,null,null)),(s()(),a.Ub(-1,null,["(empty)"]))],null,null)}function x(s){return a.Vb(0,[(s()(),a.Ub(-1,null,[" Token: "])),(s()(),a.Fb(1,0,null,null,1,"code",[],null,null,null,null,null)),(s()(),a.Ub(2,null,["",""]))],null,(function(s,n){s(n,2,0,n.component.formatToken(n.parent.context.$implicit.token))}))}function k(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"span",[["class","error"]],null,null,null,null,null)),(s()(),a.Ub(-1,null,["Error"])),(s()(),a.Ub(-1,null,[": "])),(s()(),a.Fb(3,0,null,null,1,"code",[],null,null,null,null,null)),(s()(),a.Ub(4,null,["",""]))],null,(function(s,n){s(n,4,0,n.parent.context.$implicit.error||"This execution resulted in error")}))}function f(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,8,"li",[],null,null,null,null,null)),(s()(),a.Ub(-1,null,[" Action: "])),(s()(),a.Fb(2,0,null,null,1,"code",[],null,null,null,null,null)),(s()(),a.Ub(3,null,["",""])),(s()(),a.Ub(-1,null,[". "])),(s()(),a.wb(16777216,null,null,1,null,x)),a.Eb(6,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.wb(16777216,null,null,1,null,k)),a.Eb(8,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null)],(function(s,n){s(n,6,0,n.context.$implicit.token),s(n,8,0,!n.context.$implicit.token)}),(function(s,n){s(n,3,0,n.context.$implicit.action)}))}function y(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,2,"ol",[],null,null,null,null,null)),(s()(),a.wb(16777216,null,null,1,null,f)),a.Eb(2,278528,null,0,u.i,[a.eb,a.Z,a.B],{ngForOf:[0,"ngForOf"]},null)],(function(s,n){s(n,2,0,n.component.executionLog)}),null)}function E(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"button",[],null,[[null,"click"]],(function(s,n,l){var a=!0,t=s.component;"click"===n&&(a=!1!==t.executeAction("homepage")&&a);return a}),null,null)),(s()(),a.Ub(-1,null,['Execute "homepage" action'])),(s()(),a.Fb(2,0,null,null,1,"button",[],null,[[null,"click"]],(function(s,n,l){var a=!0,t=s.component;"click"===n&&(a=!1!==t.executeAction("shoppingCart")&&a);return a}),null,null)),(s()(),a.Ub(-1,null,['Execute "shoppingCart" action'])),(s()(),a.wb(16777216,null,null,1,null,j)),a.Eb(5,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.wb(16777216,null,null,1,null,g)),a.Eb(7,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.wb(16777216,null,null,1,null,b)),a.Eb(9,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.wb(16777216,null,null,1,null,m)),a.Eb(11,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.Fb(12,0,null,null,1,"h3",[],null,null,null,null,null)),(s()(),a.Ub(-1,null,["reCAPTCHA execution log"])),(s()(),a.wb(16777216,null,null,1,null,d)),a.Eb(15,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null),(s()(),a.wb(16777216,null,null,1,null,y)),a.Eb(17,16384,null,0,u.j,[a.eb,a.Z],{ngIf:[0,"ngIf"]},null)],(function(s,n){var l=n.component;s(n,5,0,l.recentToken),s(n,7,0,l.recentToken),s(n,9,0,l.recentError),s(n,11,0,l.recentError),s(n,15,0,0===l.executionLog.length),s(n,17,0,l.executionLog.length>0)}),null)}var w=a.Bb("recaptcha-demo",p,(function(s){return a.Vb(0,[(s()(),a.Fb(0,0,null,null,1,"recaptcha-demo",[],null,null,null,E,h)),a.Eb(1,245760,null,0,p,[i.f],null,null)],(function(s,n){s(n,1,0)}),null)}),{},{},[]),A=l("ZYCi");l.d(n,"DemoModuleNgFactory",(function(){return C}));var C=a.Cb(c,[],(function(s){return a.Lb([a.Mb(512,a.m,a.rb,[[8,[r.a,w]],[3,a.m],a.H]),a.Mb(4608,i.f,i.f,[a.J,i.e,a.M,[2,i.a],[2,i.c],[2,i.b]]),a.Mb(4608,u.l,u.k,[a.D,[2,u.s]]),a.Mb(1073742336,A.n,A.n,[[2,A.t],[2,A.l]]),a.Mb(1073742336,i.k,i.k,[]),a.Mb(1073742336,u.b,u.b,[]),a.Mb(1073742336,c,c,[]),a.Mb(256,i.e,"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM",[]),a.Mb(256,i.b,o,[]),a.Mb(1024,A.i,(function(){return[[{path:"",component:p,data:e}]]}),[])])}))}}]);