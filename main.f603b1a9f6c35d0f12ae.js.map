{"version":3,"sources":["./src/app/examples/v3/v3-demo.module.ts","./src/app/demo-wrapper/demo-wrapper.module.ts","./src/app/demo-wrapper/demo-wrapper.data.auto-gen.ts","./src/app/examples/v3/v3-demo.main.ts","./src/app/demo-wrapper/demo-wrapper.component.ts","./src/app/demo-wrapper/recaptcha-demo-wrapper.component.html","./src/app/examples/v3/v3-demo.component.ts","./src/app/examples/v3/v3-demo.component.html","./src/app/examples/v3/v3-demo.data.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.f603b1a9f6c35d0f12ae.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } from 'ng-recaptcha';\n\nimport { PAGE_SETTINGS } from '../../demo-wrapper/demo-wrapper.component';\nimport { DemoWrapperModule } from '../../demo-wrapper/demo-wrapper.module';\nimport { RecaptchaV3DemoComponent } from './v3-demo.component';\nimport { settings } from './v3-demo.data';\n\n@NgModule({\n  bootstrap: [RecaptchaV3DemoComponent],\n  declarations: [RecaptchaV3DemoComponent],\n  imports: [\n    BrowserModule,\n    RecaptchaV3Module,\n    DemoWrapperModule,\n  ],\n  providers: [\n    { provide: PAGE_SETTINGS, useValue: settings },\n    { provide: RECAPTCHA_V3_SITE_KEY, useValue: '6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM' },\n  ],\n})\nexport class DemoModule { }\n","import { LayoutModule } from '@angular/cdk/layout'; // tslint:disable-line:no-submodule-imports\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\n// tslint:disable-next-line:no-submodule-imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { DemoWrapperComponent, NAV_LINKS } from './demo-wrapper.component';\nimport { navLinks } from './demo-wrapper.data.auto-gen';\n\n@NgModule({\n  declarations: [DemoWrapperComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    LayoutModule,\n  ],\n  exports: [\n    DemoWrapperComponent,\n  ],\n  providers: [\n    { provide: NAV_LINKS, useValue: navLinks },\n  ],\n})\nexport class DemoWrapperModule { }\n","export const navLinks = [\n  {\n    label: 'Basic',\n    path: '/',\n    feature: 'basic',\n  },\n  {\n    label: 'Forms',\n    path: '/forms',\n    feature: 'forms',\n  },\n  {\n    label: 'Global Config',\n    path: '/global-config',\n    feature: 'global-config',\n  },\n  {\n    label: 'Invisible',\n    path: '/invisible',\n    feature: 'invisible',\n  },\n  {\n    label: 'reCAPTCHA v3',\n    path: '/v3',\n    feature: 'v3',\n  },\n  {\n    label: 'Language',\n    path: '/language',\n    feature: 'language',\n  },\n  {\n    label: 'Preloaded',\n    path: '/preload-api',\n    feature: 'preload-api',\n  },\n];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { DemoModule } from './v3-demo.module';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(DemoModule);\n","import { MediaMatcher } from '@angular/cdk/layout'; // tslint:disable-line:no-submodule-imports\nimport { ChangeDetectorRef, Component, Inject, InjectionToken, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n\n\nexport interface PageSettings {\n  title: string;\n  feature: string;\n  content: {\n    html: string;\n    component: string;\n    module: string;\n    additional?: {\n      title: string;\n      type: string;\n      content: string;\n    }\n  };\n}\nexport interface NavLink {\n  label: string;\n  path: string;\n  feature: string;\n}\nexport const PAGE_SETTINGS = new InjectionToken<PageSettings>('PAGE_SETTINGS');\nexport const NAV_LINKS = new InjectionToken<NavLink[]>('NAV_LINKS');\n\n@Component({\n  selector: 'recaptcha-demo-wrapper',\n  styleUrls: [\n    './recaptcha-demo-wrapper.component.css',\n  ],\n  templateUrl: './recaptcha-demo-wrapper.component.html',\n})\nexport class DemoWrapperComponent implements OnInit, OnDestroy {\n  public site = {\n    title: 'ng-recaptcha',\n    description: 'Angular component for Google reCAPTCHA',\n    baseurl: '/ng-recaptcha',\n  };\n  public mobileQuery: MediaQueryList;\n  public sidebarOpened: boolean = false;\n\n  private mobileQueryListener: () => void;\n\n  constructor(\n    @Inject(PAGE_SETTINGS) public page: PageSettings,\n    @Inject(NAV_LINKS) public navLinks: NavLink[],\n    private titleService: Title,\n    media: MediaMatcher,\n    changeDetectorRef: ChangeDetectorRef,\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this.mobileQueryListener);\n  }\n\n  public ngOnInit() {\n    this.titleService.setTitle(`${this.page.title} | ${this.site.title}`);\n  }\n\n  public ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this.mobileQueryListener);\n  }\n}","<section class=\"recaptcha-demo-wrapper\">\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <img src=\"images/angular.svg\" height=\"40px\" />\n    <span>{{ site.title }}</span>\n    <span class=\"filler\"></span>\n\n    <a *ngIf=\"!mobileQuery.matches\" mat-button href=\"https://github.com/DethAriel/ng2-recaptcha\">\n      <img src=\"images/octocat.svg\" height=\"26px\" />\n      <span>GitHub</span>\n    </a>\n    <a *ngIf=\"mobileQuery.matches\" aria-label=\"GitHub repository\" mat-icon-button href=\"https://github.com/DethAriel/ng2-recaptcha\">\n      <img src=\"images/octocat.svg\" height=\"26px\" />\n    </a>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-sidenav-container>\n  <mat-sidenav\n    #sidenav\n    (closed)=\"sidebarOpened = false\"\n    [opened]=\"!mobileQuery.matches || sidebarOpened\"\n    [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n    [fixedInViewport]=\"mobileQuery.matches\"\n    fixedTopGap=\"56\"\n  >\n    <mat-nav-list>\n      <h3>Examples</h3>\n      <a\n        mat-list-item\n        *ngFor=\"let link of navLinks\"\n        [href]=\"site.baseurl + link.path\"\n        [class.active]=\"page.feature === link.feature\"\n      >\n        {{ link.label }}\n      </a>\n   </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div class=\"layout\">\n      <mat-toolbar color=\"primary\">\n        <button mat-icon-button *ngIf=\"mobileQuery.matches\" (click)=\"sidebarOpened = true\">\n          <mat-icon aria-hidden=\"true\">menu</mat-icon>\n        </button>\n        <span>{{ page.title }}</span>\n      </mat-toolbar>\n      <main>\n        <div class=\"example-container\">\n          <ng-content></ng-content>\n        </div>\n\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <code>{{page.feature}}.component.html</code>\n            </ng-template>\n            <pre [innerHTML]=\"page.content.html\"></pre>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <code>{{page.feature}}.component.ts</code>\n            </ng-template>\n            <pre [innerHTML]=\"page.content.component\"></pre>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <code>main.ts</code>\n            </ng-template>\n            <pre [innerHTML]=\"page.content.module\"></pre>\n          </mat-tab>\n          <mat-tab *ngIf=\"page.content.additional\">\n            <ng-template mat-tab-label>\n              <code>{{ page.content.additional.title }}</code>\n            </ng-template>\n            <pre [innerHTML]=\"page.content.additional.content\"></pre>\n          </mat-tab>\n        </mat-tab-group>\n      </main>\n      <footer>\n        <div>\n          <img src=\"images/angular.svg\" height=\"32px\" />\n        </div>\n        <div>\n          <h3>{{ site.title }}</h3>\n        </div>\n        <span>{{ site.description }}</span>\n      </footer>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n</section>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { OnExecuteData, OnExecuteErrorData, ReCaptchaV3Service } from 'ng-recaptcha';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'recaptcha-demo',\n  styles: [`\n    .error { color: crimson; }\n` ],\n  templateUrl: './v3-demo.component.html',\n})\nexport class RecaptchaV3DemoComponent implements OnInit, OnDestroy {\n  public recentToken: string = '';\n  public recentError?: { error: any };\n  public readonly executionLog: Array<OnExecuteData | OnExecuteErrorData> = [];\n\n  private allExecutionsSubscription: Subscription;\n  private allExecutionErrorsSubscription: Subscription;\n  private singleExecutionSubscription: Subscription;\n\n  constructor(\n    private recaptchaV3Service: ReCaptchaV3Service,\n  ) {\n  }\n\n  public executeAction(action: string): void {\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n    this.singleExecutionSubscription = this.recaptchaV3Service.execute(action)\n      .subscribe(\n        (token) => {\n          this.recentToken = token;\n          this.recentError = undefined;\n        },\n        (error) => {\n          this.recentToken = '';\n          this.recentError = { error };\n        },\n      );\n  }\n\n  public ngOnInit() {\n    this.allExecutionsSubscription = this.recaptchaV3Service.onExecute\n      .subscribe((data) => this.executionLog.push(data));\n    this.allExecutionErrorsSubscription = this.recaptchaV3Service.onExecuteError\n      .subscribe((data) => this.executionLog.push(data));\n  }\n\n  public ngOnDestroy() {\n    if (this.allExecutionsSubscription) {\n      this.allExecutionsSubscription.unsubscribe();\n    }\n    if (this.allExecutionErrorsSubscription) {\n      this.allExecutionErrorsSubscription.unsubscribe();\n    }\n    if (this.singleExecutionSubscription) {\n      this.singleExecutionSubscription.unsubscribe();\n    }\n  }\n\n  public formatToken(token: string): string {\n    if (!token) {\n      return '(empty)';\n    }\n\n    return `${token.substr(0, 7)}...${token.substr(-7)}`;\n  }\n}\n","<recaptcha-demo-wrapper>\n  <button (click)=\"executeAction('homepage')\">Execute \"homepage\" action</button>\n  <button (click)=\"executeAction('shoppingCart')\">Execute \"shoppingCart\" action</button>\n\n  <h3 *ngIf=\"recentToken\">Most recent token</h3>\n  <pre *ngIf=\"recentToken\">{{ formatToken(recentToken) }}</pre>\n\n  <h3 *ngIf=\"recentError\" class=\"error\">Most recent error</h3>\n  <pre *ngIf=\"recentError\" class=\"error\">{{ recentError.error || \"Most recent execution resulted in error\" }}</pre>\n\n  <h3>reCAPTCHA execution log</h3>\n  <pre *ngIf=\"executionLog.length === 0\">(empty)</pre>\n  <ol *ngIf=\"executionLog.length > 0\">\n    <li *ngFor=\"let entry of executionLog\">\n      Action: <code>{{ entry.action }}</code>.\n      <ng-template [ngIf]=\"entry.token\">\n        Token: <code>{{ formatToken(entry.token) }}</code>\n      </ng-template>\n      <ng-template [ngIf]=\"!entry.token\">\n        <span class=\"error\">Error</span>: <code>{{ entry.error || \"This execution resulted in error\" }}</code>\n      </ng-template>\n    </li>\n  </ol>\n</recaptcha-demo-wrapper>\n","// tslint:disable no-require-imports no-submodule-imports\nimport { PageSettings } from '../../demo-wrapper/demo-wrapper.component';\n\nexport const settings: PageSettings = {\n  feature: 'v3',\n  title: 'reCAPTCHA v3 Example',\n  content: {\n    component: \"<span class=\\\"hljs-keyword\\\">import</span> { Component, OnDestroy, OnInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;@angular/core&#x27;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">import</span> { OnExecuteData, OnExecuteErrorData, ReCaptchaV3Service } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;ng-recaptcha&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Subscription } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;rxjs&#x27;</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  selector: <span class=\\\"hljs-string\\\">&#x27;recaptcha-demo&#x27;</span>,\\n  styles: [<span class=\\\"hljs-string\\\">`\\n    .error { color: crimson; }\\n`</span> ],\\n  templateUrl: <span class=\\\"hljs-string\\\">&#x27;./v3-demo.component.html&#x27;</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> RecaptchaV3DemoComponent <span class=\\\"hljs-keyword\\\">implements</span> OnInit, OnDestroy {\\n  <span class=\\\"hljs-keyword\\\">public</span> recentToken: <span class=\\\"hljs-built_in\\\">string</span> = <span class=\\\"hljs-string\\\">&#x27;&#x27;</span>;\\n  <span class=\\\"hljs-keyword\\\">public</span> recentError?: { error: <span class=\\\"hljs-built_in\\\">any</span> };\\n  <span class=\\\"hljs-keyword\\\">public</span> <span class=\\\"hljs-keyword\\\">readonly</span> executionLog: <span class=\\\"hljs-built_in\\\">Array</span>&lt;OnExecuteData | OnExecuteErrorData&gt; = [];\\n\\n  <span class=\\\"hljs-keyword\\\">private</span> allExecutionsSubscription: Subscription;\\n  <span class=\\\"hljs-keyword\\\">private</span> allExecutionErrorsSubscription: Subscription;\\n  <span class=\\\"hljs-keyword\\\">private</span> singleExecutionSubscription: Subscription;\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\">\\n    <span class=\\\"hljs-keyword\\\">private</span> recaptchaV3Service: ReCaptchaV3Service,\\n  </span>) {\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">public</span> executeAction(action: <span class=\\\"hljs-built_in\\\">string</span>): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-built_in\\\">this</span>.singleExecutionSubscription) {\\n      <span class=\\\"hljs-built_in\\\">this</span>.singleExecutionSubscription.unsubscribe();\\n    }\\n    <span class=\\\"hljs-built_in\\\">this</span>.singleExecutionSubscription = <span class=\\\"hljs-built_in\\\">this</span>.recaptchaV3Service.execute(action)\\n      .subscribe(\\n        <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">token</span>) =&gt;</span> {\\n          <span class=\\\"hljs-built_in\\\">this</span>.recentToken = token;\\n          <span class=\\\"hljs-built_in\\\">this</span>.recentError = <span class=\\\"hljs-literal\\\">undefined</span>;\\n        },\\n        <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">error</span>) =&gt;</span> {\\n          <span class=\\\"hljs-built_in\\\">this</span>.recentToken = <span class=\\\"hljs-string\\\">&#x27;&#x27;</span>;\\n          <span class=\\\"hljs-built_in\\\">this</span>.recentError = { error };\\n        },\\n      );\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">public</span> ngOnInit() {\\n    <span class=\\\"hljs-built_in\\\">this</span>.allExecutionsSubscription = <span class=\\\"hljs-built_in\\\">this</span>.recaptchaV3Service.onExecute\\n      .subscribe(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">data</span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">this</span>.executionLog.push(data));\\n    <span class=\\\"hljs-built_in\\\">this</span>.allExecutionErrorsSubscription = <span class=\\\"hljs-built_in\\\">this</span>.recaptchaV3Service.onExecuteError\\n      .subscribe(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">data</span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">this</span>.executionLog.push(data));\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">public</span> ngOnDestroy() {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-built_in\\\">this</span>.allExecutionsSubscription) {\\n      <span class=\\\"hljs-built_in\\\">this</span>.allExecutionsSubscription.unsubscribe();\\n    }\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-built_in\\\">this</span>.allExecutionErrorsSubscription) {\\n      <span class=\\\"hljs-built_in\\\">this</span>.allExecutionErrorsSubscription.unsubscribe();\\n    }\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-built_in\\\">this</span>.singleExecutionSubscription) {\\n      <span class=\\\"hljs-built_in\\\">this</span>.singleExecutionSubscription.unsubscribe();\\n    }\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">public</span> formatToken(token: <span class=\\\"hljs-built_in\\\">string</span>): <span class=\\\"hljs-built_in\\\">string</span> {\\n    <span class=\\\"hljs-keyword\\\">if</span> (!token) {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-string\\\">&#x27;(empty)&#x27;</span>;\\n    }\\n\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${token.substr(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">7</span>)}</span>...<span class=\\\"hljs-subst\\\">${token.substr(<span class=\\\"hljs-number\\\">-7</span>)}</span>`</span>;\\n  }\\n}\\n\",\n    html: \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">recaptcha-demo-wrapper</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>Execute &quot;shoppingCart&quot; action<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;recentError&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;error&quot;</span>&gt;</span>Most recent error<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;recentError&quot;</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;error&quot;</span>&gt;</span>{{ recentError.error || &quot;Most recent execution resulted in error&quot; }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>reCAPTCHA execution log<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ol</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">li</span> *<span class=\\\"hljs-attr\\\">ngFor</span>=<span class=\\\"hljs-string\\\">&quot;let entry of executionLog&quot;</span>&gt;</span>\\n      Action: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>{{ entry.action }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>.\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ng-template</span> [<span class=\\\"hljs-attr\\\">ngIf</span>]=<span class=\\\"hljs-string\\\">&quot;entry.token&quot;</span>&gt;</span>\\n        Token: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ng-template</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">ng-template</span> [<span class=\\\"hljs-attr\\\">ngIf</span>]=<span class=\\\"hljs-string\\\">&quot;!entry.token&quot;</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">span</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;error&quot;</span>&gt;</span>Error<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">span</span>&gt;</span>: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ng-template</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">li</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">ol</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">recaptcha-demo-wrapper</span>&gt;</span>\\n\",\n    module: \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;@angular/core&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { BrowserModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;@angular/platform-browser&#x27;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">import</span> { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;ng-recaptcha&#x27;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">import</span> { PAGE_SETTINGS } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;../../demo-wrapper/demo-wrapper.component&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoWrapperModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;../../demo-wrapper/demo-wrapper.module&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RecaptchaV3DemoComponent } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;./v3-demo.component&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { settings } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;./v3-demo.data&#x27;</span>;\\n\\n<span class=\\\"hljs-meta\\\">@NgModule</span>({\\n  bootstrap: [RecaptchaV3DemoComponent],\\n  declarations: [RecaptchaV3DemoComponent],\\n  imports: [\\n    BrowserModule,\\n    RecaptchaV3Module,\\n    DemoWrapperModule,\\n  ],\\n  providers: [\\n    { provide: PAGE_SETTINGS, useValue: settings },\\n    { provide: RECAPTCHA_V3_SITE_KEY, useValue: <span class=\\\"hljs-string\\\">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\\n  ],\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule { }\\n\",\n  },\n};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}