(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{UMLa:function(s,a,n){"use strict";n.r(a),n.d(a,"DemoModule",function(){return h});var l=n("ofXK"),p=n("3Pt+"),o=n("tyNb"),t=n("jCJ1"),r=n("FID4"),c=n("fXoL"),e=[{path:"",component:function(){function s(){this.formModel={}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=c.Eb({type:s,selectors:[["recaptcha-demo"]],decls:14,vars:5,consts:[["captchaProtectedForm","ngForm"],["name","captcha","required","","siteKey","6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU",3,"ngModel","ngModelChange"],["captchaControl","ngModel"],[1,"error",3,"hidden"],[1,"success",3,"hidden"],[3,"click"]],template:function(s,a){if(1&s&&(c.Pb(0,"form",null,0),c.Pb(2,"re-captcha",1,2),c.Wb("ngModelChange",function(s){return a.formModel.captcha=s}),c.Ob(),c.Pb(4,"div",3),c.rc(5," Captcha must be solved "),c.Ob(),c.Pb(6,"div",4),c.rc(7,"Captcha is valid"),c.Ob(),c.Pb(8,"div",3),c.rc(9," The form must be filled out "),c.Ob(),c.Pb(10,"div",4),c.rc(11," The form is valid "),c.Ob(),c.Pb(12,"button",5),c.Wb("click",function(){return a.formModel.captcha=""}),c.rc(13,"Reset Captcha"),c.Ob(),c.Ob()),2&s){var n=c.gc(1),l=c.gc(3);c.zb(2),c.bc("ngModel",a.formModel.captcha),c.zb(2),c.bc("hidden",l.valid||l.pristine),c.zb(2),c.bc("hidden",!l.valid),c.zb(2),c.bc("hidden",n.form.valid),c.zb(2),c.bc("hidden",!n.form.valid)}},directives:[p.j,p.f,p.g,t.e,t.j,p.i,p.e,p.h],styles:[".error[_ngcontent-%COMP%] {\n        color: crimson;\n      }\n      .success[_ngcontent-%COMP%] {\n        color: green;\n      }"]}),s}(),data:{page:{feature:"forms",title:"Forms Example",content:{component:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> FormModel {\n  captcha?: <span class="hljs-built_in">string</span>;\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n      .success {\n        color: green;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./forms-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FormsDemoComponent</span> </span>{\n  <span class="hljs-keyword">public</span> formModel: FormModel = {};\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">form</span> #<span class="hljs-attr">captchaProtectedForm</span>=<span class="hljs-string">&quot;ngForm&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;formModel.captcha&quot;</span>\n    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;captcha&quot;</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">siteKey</span>=<span class="hljs-string">&quot;6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU&quot;</span>\n    #<span class="hljs-attr">captchaControl</span>=<span class="hljs-string">&quot;ngModel&quot;</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaControl.valid || captchaControl.pristine&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>\n    Captcha must be solved\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaControl.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Captcha is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>\n    The form must be filled out\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>\n    The form is valid\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;formModel.captcha = &#x27;&#x27;&quot;</span>&gt;</span>Reset Captcha<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: FormsDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [FormsDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',fr:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: FormsDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [FormsDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n',de:'<span class="hljs-keyword">import</span> { NgModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { CommonModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { FormsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { Routes, RouterModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { RecaptchaFormsModule, RecaptchaModule, RECAPTCHA_LANGUAGE } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { FormsDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> routes: Routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: FormsDemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [FormsDemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    RouterModule.forChild(routes),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    FormsModule,\n    CommonModule,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: RECAPTCHA_LANGUAGE, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoModule</span> </span>{ }\n'}}}}}],h=function(){function s(){}return s.\u0275mod=c.Ib({type:s}),s.\u0275inj=c.Hb({factory:function(a){return new(a||s)},providers:[{provide:t.c,useValue:"6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM"},{provide:t.a,useValue:Object(r.a)()}],imports:[[o.d.forChild(e),t.h,t.f,p.b,l.b]]}),s}()}}]);